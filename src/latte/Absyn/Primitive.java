package latte.Absyn; // Java Package generated by the BNF Converter.

import compiler.LLVMAST.Value;

public class Primitive extends Type {
    public final PrimitiveType primitivetype_;
    public int line_num, col_num, offset;

    public Primitive(PrimitiveType p1) {
        primitivetype_ = p1;
    }

    public <R, A> R accept(latte.Absyn.Type.Visitor<R, A> v, A arg) {
        return v.visit(this, arg);
    }

    @Override
    public String toLLVM() {
        return primitivetype_.toLLVM();
    }

    @Override
    public Value getDefaultLLVMValue() {
        return primitivetype_.getDefaultLLVMValue();
    }

    public boolean equals(java.lang.Object o) {
        if (this == o) return true;
        if (o instanceof latte.Absyn.Primitive) {
            latte.Absyn.Primitive x = (latte.Absyn.Primitive) o;
            return this.primitivetype_.equals(x.primitivetype_);
        }
        return false;
    }

    public int hashCode() {
        return this.primitivetype_.hashCode();
    }

    @Override
    public String toString() {
        return "Primitive Type: " + primitivetype_.toString();
    }
}
